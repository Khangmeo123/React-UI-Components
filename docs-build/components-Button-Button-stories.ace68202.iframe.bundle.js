"use strict";(self.webpackChunkreact_ui_components=self.webpackChunkreact_ui_components||[]).push([[7721],{"./src/components/Button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bleed:()=>Bleed,Ghost:()=>Ghost,IconButton:()=>IconButton,Link:()=>Link,LinkPlainButton:()=>LinkPlainButton,NormalButton:()=>NormalButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@carbon/icons-react/es/generated/bucket-0.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.tsx"),classnames__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_3__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Button",component:_Button__WEBPACK_IMPORTED_MODULE_2__.A,parameters:{controls:{expanded:!0},docs:{page:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.hE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.Pd,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.VY,{children:"test"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.Tn,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.om,{includePrimary:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.uY,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_0__.h1})]})}},argTypes:{className:{control:{type:"radio",options:["btn--sx","btn--sm","btn--md","btn--lg","btn--xl","btn--2xl"]},defaultValue:"btn--sm",description:""},type:{},loading:{},htmlType:{},disabled:{},onClick:{},icon:{}}},Template=args=>{const[loading,setLoading]=react__WEBPACK_IMPORTED_MODULE_1__.useState(!1),handleOnClick=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((()=>{setLoading(!0),setTimeout((()=>{setLoading(!1)}),2e3)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{style:{width:500},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_2__.A,{...args,className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("m-l--2xl",args?.className),icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__.OM,{size:16}),loading,onClick:handleOnClick,children:"Button"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_2__.A,{...args,className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("m-l--2xl",args?.className),icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__.OM,{size:16}),loading,onClick:handleOnClick,children:"Button"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_2__.A,{...args,className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("m-l--2xl",args?.className),icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_5__.OM,{size:16}),loading,onClick:handleOnClick,children:"Button"})]})};Template.displayName="Template";const NormalButton=Template.bind({});NormalButton.parameters={docs:{description:{story:"Some story **markdown**"}}};const Ghost=Template.bind({});Ghost.args={...NormalButton.args,type:"ghost"},Ghost.parameters={docs:{description:{story:"Some story **markdown**"}}};const Bleed=Template.bind({});Bleed.args={...NormalButton.args,type:"bleed-primary"},Bleed.parameters={docs:{description:{story:"Some story **markdown**"}}};const LinkPlainButton=Template.bind({});LinkPlainButton.args={...NormalButton.args,type:"link-plain"},LinkPlainButton.parameters={docs:{description:{story:"Some story **markdown**"}}};const Link=Template.bind({});Link.args={...NormalButton.args,type:"link"},Link.parameters={docs:{description:{story:"Some story **markdown**"}}};const IconButton=Template.bind({});IconButton.args={...NormalButton.args,type:"icon-only-primary"},IconButton.parameters={docs:{description:{story:"Some story **markdown**"}}},NormalButton.parameters={...NormalButton.parameters,docs:{...NormalButton.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...NormalButton.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...Ghost.parameters?.docs?.source}}},Bleed.parameters={...Bleed.parameters,docs:{...Bleed.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...Bleed.parameters?.docs?.source}}},LinkPlainButton.parameters={...LinkPlainButton.parameters,docs:{...LinkPlainButton.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...LinkPlainButton.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...Link.parameters?.docs?.source}}},IconButton.parameters={...IconButton.parameters,docs:{...IconButton.parameters?.docs,source:{originalSource:'args => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const handleOnClick = React.useCallback(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return <div style={{\n    width: 500\n  }}>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n      <Button {...args} className={classNames("m-l--2xl", args?.className)} icon={<Add size={16} />} loading={loading} onClick={handleOnClick}>\r\n        {"Button"}\r\n      </Button>\r\n    </div>;\n}',...IconButton.parameters?.docs?.source}}};const __namedExportsOrder=["NormalButton","Ghost","Bleed","LinkPlainButton","Link","IconButton"]}}]);